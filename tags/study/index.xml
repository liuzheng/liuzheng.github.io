<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Study on LZ&#39;s Blog</title>
    <link>https://liuzheng.github.io/tags/study/</link>
    <description>Recent content in Study on LZ&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	<atom:link href="https://liuzheng.github.io/tags/study/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CentOS6 升级到 7</title>
      <link>https://liuzheng.github.io/before2018/2014-9-27-centos6upgradeto7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://liuzheng.github.io/before2018/2014-9-27-centos6upgradeto7/</guid>
      <description>CentOS 7 已经发布了，很多情况不允许重装系统，我这里就写一下 CentOS6 升级到 7 的过程以及注意点吧。
安装 CentOS 6 由于没有 CentOS 6 的实体机玩，我就装个 VirtualBox
VirtualBox 配置的机器如下
安装都是基本默认配置，未做特殊修改，仅仅设置磁盘大小为18GB
CentOS 版本为 CentOS-6.4-x86_64
准备升级 首先修改upgrade.repo
# vim /etc/yum.repos.d/upgrade.repo  加入，注：这里baseurl我在163的源里木有看到有upg目录，so，使用原版的
[upgrade] name=upgrade baseurl=http://dev.centos.org/centos/6/upg/x86_64/ enabled=1 gpgcheck=0  安装升级软件
# yum -y install preupgrade-assistant-contents redhat-upgrade-tool preupgrade-assistant  运行检查命令，以保证升级前所有软件都ok
# preupg  如出现各种包依赖什么关系，请自行 Google ，无法在此对所有情况一一做叙述
好了，现在使用 repo 文件升级,发出以下命令来导入GPG密钥。注：我这里使用的是 163 的源
# rpm --import http://mirrors.163.com/centos/7.0.1406/os/x86_64/RPM-GPG-KEY-CentOS-7  根据手册页,使用以下命令升级CentOS 6;这将从互联网下载的包。
# redhat-upgrade-tool --network 7.0 --instrepo http://mirrors.163.com/centos/7.0.1406/os/x86_64/  出来这个结果，看看英文吧，就是说不推荐，存在风险啥啥的</description>
    </item>
    
    <item>
      <title>淘宝前端26个字母</title>
      <link>https://liuzheng.github.io/before2018/2014-08-19-taobao26/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://liuzheng.github.io/before2018/2014-08-19-taobao26/</guid>
      <description>字母表 Angular; Backbone; Console; Dir; Express; Fork; Grunt; Haslayout; Iconfont; Jsonp; Kissy; Localstorage; Media query; Npm; Opacity; Prototype; Querystring; Referer; Seajs; Trim; Underscore; Vim; Worker; Xss; Yslow; Zepto;
Angular 2014年暑假期间，系统学习了一下 AngularJS ，主要也就双向数据绑定为交互提供便利，通过当时的项目，我也发现了这货确实社区强大，各种插件都挺多的，想要的基本都有吧，虽然部分插件都存在兼容性bug，不过还是挺适合快速开发的。
Console 只玩过Console.log，发现还是挺吊的，百度的那个console招聘采取的字节转化图片，之前木有想到过哈，各家稍微大一点的互联网公司玩console的风格确实有意思。不知道console里有木有游戏，这个估计也会很吊的。
Express 这个是node的框架，没细玩（截止到现在）。迟点可能考虑完nodejs编些应用。
Fork 这个是git的的么？fork分支，如果是那就轻轻松松了，算是git老用户。
Grunt js整合工具，玩angular的时候顺带折腾node的时候试过，后来直接用windows自带的copy命令结合 uglifyjs 玩了，windows 写个bat，似乎还是容易点，当时需求没那么复杂
copy AAA.js+BBB.js+CCC.js+DDD.js+EEE.js ZZZ.js /b uglifyjs ZZZ.js -m -o ZZZ.min.js  网上查了一下，据说和maven类似的js管理工具，好像很强大的样子，木有系统学过。。。
Iconfont 现查。。。这货是阿里折腾图标库，好吧，不多说了
Jsonp json格式么？angular就是玩这个，觉得这货不错，形式简单，kiss，不过以后考虑玩玩字节码传数据，好像很高端霸气上档次的样子。
Localstorage HTML5的东西，之前玩过，后来没折腾了，感觉不错，不过需要HTML5支持，做离线化论坛可以考虑。之前在jh 坏坏的讨论过相关玩意儿。
Npm 又是node的东西，包管理器吧，apt-get？emerge？yum？巴拉巴拉
Vim 作为Linux用户这个不错的，这里应该说的是Vim的前端实现吧，自用chrome就装了Vimium
其他 其他我就不是特别懂了，技能树以后再慢慢点吧</description>
    </item>
    
  </channel>
</rss>